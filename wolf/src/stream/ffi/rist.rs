/* automatically generated by rust-bindgen 0.59.2 */

pub type __darwin_size_t = ::std::os::raw::c_ulong;
pub type size_t = __darwin_size_t;
#[repr(C)]
#[repr(align(16))]
#[derive(Debug, Copy, Clone)]
pub struct w_buf_t {
    pub data: *mut u8,
    pub len: size_t,
}
pub type w_buf = *mut w_buf_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct w_rist_t {
    _unused: [u8; 0],
}
pub type w_rist = *mut w_rist_t;
pub const w_rist_profile_W_RIST_PROFILE_SIMPLE: w_rist_profile = 0;
pub const w_rist_profile_W_RIST_PROFILE_MAIN: w_rist_profile = 1;
pub const w_rist_profile_W_RIST_PROFILE_ADVANCED: w_rist_profile = 2;
pub type w_rist_profile = ::std::os::raw::c_uint;
pub const w_rist_mode_W_RIST_MODE_SENDER: w_rist_mode = 0;
pub const w_rist_mode_W_RIST_MODE_RECEIVER: w_rist_mode = 1;
pub type w_rist_mode = ::std::os::raw::c_uint;
#[repr(C)]
#[repr(align(16))]
#[derive(Debug, Copy, Clone)]
pub struct w_rist_config_t {
    pub mode: w_rist_mode,
    pub profile: w_rist_profile,
    pub loss_percent: ::std::os::raw::c_int,
    pub timeout: ::std::os::raw::c_int,
}
pub type w_rist_config = *mut w_rist_config_t;
extern "C" {
    #[doc = " initialize rist and bind to the url"]
    #[doc = " @param p_rist the object of rist"]
    #[doc = " @param p_url the url"]
    #[doc = " @param p_profile the profile of rist"]
    #[doc = " @param p_trace the trace information in the string format with maximum size of 256"]
    #[doc = " @return 0 on success, 1 on invalid parameter and -1 on error which the error description will be printed into p_trace"]
    pub fn w_rist_bind(
        p_rist: *mut w_rist,
        p_url: *const ::std::os::raw::c_char,
        p_config: w_rist_config,
        p_trace: w_buf,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    #[doc = " start rist stream"]
    #[doc = " @param p_rist the object of rist"]
    #[doc = " @param p_trace the trace information in the string format with maximum size of 256"]
    #[doc = " @return 0 on success, 1 on invalid parameter and -1 on error which the error description will be printed into p_trace"]
    pub fn w_rist_start(p_rist: w_rist, p_trace: w_buf) -> ::std::os::raw::c_int;
}
extern "C" {
    #[doc = " stop rist stream"]
    #[doc = " @param p_rist the object of rist"]
    #[doc = " @return 0 on success, 1 on invalid parameter and -1 on error which the error description will be printed into p_trace"]
    pub fn w_rist_stop(p_rist: w_rist) -> ::std::os::raw::c_int;
}
extern "C" {
    #[doc = " is rist stream stopped"]
    #[doc = " @param p_rist the object of rist"]
    #[doc = " @return true on stop condition"]
    pub fn w_rist_is_stopped(p_rist: w_rist) -> bool;
}
extern "C" {
    #[doc = " release rist resources"]
    #[doc = " @param p_rist the object of rist"]
    #[doc = " @return 0 on success, 1 on invalid parameter and -1 on error"]
    pub fn w_rist_fini(p_rist: *mut w_rist) -> ::std::os::raw::c_int;
}
